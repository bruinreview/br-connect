{"version":3,"sources":["Header.js","Components/Tags.js","Components/About.js","Components/ButtonList.js","Components/Contact.js","Components/GetInvolved.js","Connect/Connect.js","Components/Support.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","className","to","Component","Tags","About","Button","selectBtn","onClick","index","bind","this","active","id","label","Contact","apply","src","frameborder","onmousewheel","width","height","style","overflow","background","border","GetInvolved","Print","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qXAKqBA,G,kBACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,GAFC,E,sEAMd,OACI,yBAAKC,UAAU,gCACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,uBAAuBC,GAAG,YAAzC,WACA,yBAAKD,UAAU,uBAAuBC,GAAG,SAAzC,QACA,yBAAKD,UAAU,uBAAuBC,GAAG,UAAzC,SACA,yBAAKD,UAAU,uBAAuBC,GAAG,KAAzC,QACA,yBAAKD,UAAU,mB,GAfCE,c,2BCIrBC,ICJMC,E,YACjB,WAAYN,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,oEAOXD,GACH,OACI,kBAAC,OAAD,KACA,yBAAKE,UAAU,QACb,wBAAIA,UAAU,SAAd,0BACA,2cACA,gZACA,sSACA,4sB,GAhBqBE,a,QCuB7BG,G,MAzBkCH,Y,YA0BpC,WAAYJ,GAAO,IAAD,8BACd,4CAAMA,KAMVQ,UAAY,kBAAM,EAAKR,MAAMS,QAAQ,EAAKT,MAAMU,QAL5C,EAAKT,MAAM,GAEX,EAAKO,UAAW,EAAKA,UAAUG,KAAf,gBAJF,E,oEASXX,GACH,OACI,4BAAQE,UAAWU,KAAKZ,MAAMa,OAAS,mBAAoB,SAAUC,GAAIF,KAAKZ,MAAMe,MAAON,QAASG,KAAKJ,WACtGI,KAAKZ,MAAMe,W,GAbLX,cCvBAY,E,YACjB,WAAYhB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,CACPgB,OAAO,GAHG,E,oEAOXjB,GACH,OACI,kBAAC,OAAD,KACA,4BAAQkB,IAAI,6DACxB,4BAAQhB,UAAU,yCAAyCgB,IAAI,qEAAqEC,YAAY,IAAIC,aAAa,GAAGC,MAAM,OAAOC,OAAO,OAAOC,MAAO,CAACD,OAAO,QAASE,SAAS,OAAOC,WAAY,cAAeC,OAAQ,yB,GAZrOtB,aCAhBuB,E,YACjB,WAAY3B,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,oEAOXD,GACH,OACI,kBAAC,OAAD,KACA,yBAAKE,UAAU,QACb,wBAAIA,UAAU,SAAd,gBACA,6EACA,yE,GAd2BE,aCIpBwB,GCJgBxB,Y,YDKjC,WAAYJ,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,GAFC,E,sEAMd,OACE,yBAAKC,UAAU,4BACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,kBAAC,EAAD,a,GAhBiBE,c,MEKpByB,MARf,WACE,OACE,yBAAK3B,UAAU,MAAMqB,MAAO,CAACF,MAAM,OAAQC,OAAO,SAChD,kBAAC,EAAD,QCGcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAmB,kBAAC,EAAD,MAAYC,SAASC,eAAe,SDyH1D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f5c8a7e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\n\n\nexport default class Header extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n    render(){\n        return(\n            <div className=\"flex justify-start container\">\n                <div className=\"flex vertical-text\">\n                <div className=\"line-bottom\"></div>\n                    <div className=\"no-underline ph3 nav\" to=\"/connect\">connect</div>\n                    <div className=\"no-underline ph3 nav\" to=\"/shop\">shop</div>\n                    <div className=\"no-underline ph3 nav\" to=\"/print\">print</div>\n                    <div className=\"no-underline ph3 nav\" to=\"/\">home</div>\n                    <div className=\"line-top\"></div>\n                </div>\n            </div>\n\n        )\n    }\n\n}\n","import React, {Component} from 'react';\nimport './Card.css'\n\nfunction Tags(props){\n  return(\n    <p className=\"metadata\">{props.tags.join(\" \")}</p>\n  )\n}\n\nexport default Tags\n","import React, {Component} from 'react';\nimport {Zoom, Fade} from 'react-reveal';\nimport './About.css';\nimport Tags from './Tags'\n\nexport default class About extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n\n        }\n    }\n\n    render(props){\n        return(\n            <Fade>\n            <div className=\"card\">\n              <h3 className=\"title\">About the Bruin Review</h3>\n              <p>The University was once a place of eclectic thought – the gathering of bright minds to encourage the exchange, deliberation, and inspection of ideas. Today, the inverse is true. Universities are proxy for a narrow viewpoint that is easily predictable and left unquestioned. Ideas are no longer submitted as subjects of observation and scrutiny; rather, they are endowed to students as delicacies to be defended at any cost.</p>\n              <p>The Bruin Review was founded to end this soft treatment of ideas. Thought should be forged, not coddled. The University has lost its edge as a tool for truth. Instead, it is a cog in the wheel of ideology. The Review aims to bring back those tools for the scrutiny of thought. To learn is to be curious, and to be curious is to question. The Review is here to question.</p>\n              <p>Universities should be less similar to a cultivated garden of monolithic ideals and more like a battleground of beliefs. Buckle up, because we plan to pick fights where dissension is rarely fostered and disputation seldom tolerated. Contention is our middle name.</p>\n              <p>The Bruin Review will always push to be on the edge of truth, at times nearly falling off. Our goal is to present diverse arguments on all applicable topics, transcendent of partisan semantics. First and foremost, we are a society of those who enjoy civil discourse and push-ing the limits of their intellect. Second, we are a medium for any responsible message. Our publication does not exist to bolster rumors, gossip, or pontificate over national politics. We hope to bring forward dialogue on issues which affect students’ lives and challenge the sta-tus quo of ideas. Not through simple debate, but by productive and sympathetic discussion of things sparsely mentioned.</p>\n            </div>\n            </Fade>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './Button.css';\n\nexport default class ButtonList extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n          index: 0,\n          artist: false,\n          developer: false\n        };\n        this.selectBtn= this.selectBtn.bind(this);\n    }\n    selectBtn = (i) => this.setState({ index: i })\n\n    render(props){\n        return(\n            <div className=\"button-list flex\" >\n              <Button label=\"writer\" index={1} onClick={this.selectBtn} active={this.state.index===1}/>\n              <Button label=\"artist\" index={2} onClick={this.selectBtn} active={this.state.index===2}/>\n              <Button label=\"developer\" index={3} onClick={this.selectBtn} active={this.state.index===3}/>\n              <Button label=\"sponsor\" index={4} onClick={this.selectBtn} active={this.state.index===4}/>\n              <Button label=\"other\" index={5} onClick={this.selectBtn} active={this.state.index===5}/>\n            </div>\n        )\n    }\n}\n\nclass Button extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        };\n        this.selectBtn= this.selectBtn.bind(this);\n\n    }\n    selectBtn = () => this.props.onClick(this.props.index)\n\n    render(props){\n        return(\n            <button className={this.props.active ? \"button activated\": \"button\"} id={this.props.label} onClick={this.selectBtn}>\n              {this.props.label}\n            </button>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Fade} from 'react-reveal';\nimport './About.css';\nimport ButtonList from './ButtonList';\n\nexport default class Contact extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            apply: false\n        }\n    }\n\n    render(props){\n        return(\n            <Fade>\n            <script src=\"https://static.airtable.com/js/embed/embed_snippet_v1.js\"></script>\n<iframe className=\"airtable-embed airtable-dynamic-height\" src=\"https://airtable.com/embed/shruNSySUuCOZMFae?backgroundColor=green\" frameborder=\"0\" onmousewheel=\"\" width=\"100%\" height=\"1035\" style={{height:'500px', overflow:'auto',background: 'transparent', border: '1px solid #ccc'}}></iframe>\n            </Fade>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Zoom, Fade} from 'react-reveal';\nimport './About.css';\nimport Tags from './Tags'\n\nexport default class GetInvolved extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n\n        }\n    }\n\n    render(props){\n        return(\n            <Fade>\n            <div className=\"card\">\n              <h3 className=\"title\">Get Involved</h3>\n              <p>Open Discussions - Tuesdays, 7PM, Boelter 4413</p>\n              <p>Contact - management@bruinreview.com</p>\n            </div>\n            </Fade>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Header from '../Header';\nimport './Connect.css';\nimport About from '../Components/About';\nimport Contact from '../Components/Contact';\nimport GetInvolved from '../Components/GetInvolved';\nimport Support from '../Components/Support';\n\n\nexport default class Print extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n    render(){\n        return(\n          <div className=\"flex justify-center home\">\n              <Header />\n              <div className=\"main flex justify-center\">\n                <div className=\"left-col\">\n                  <About />\n                  <GetInvolved />\n                </div>\n                <div className=\"right-col\">\n                  <Contact />\n                </div>\n              </div>\n          </div>\n        )\n    }\n\n}\n","import React, {Component} from 'react';\nimport {Zoom, Fade} from 'react-reveal';\nimport './About.css';\nimport Tags from './Tags'\n\nexport default class Support extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n\n        }\n    }\n\n    render(props){\n        return(\n            <Fade>\n            <div className=\"card\">\n              <h3 className=\"title\">Support the Bruin Review</h3>\n            </div>\n            </Fade>\n        )\n    }\n}\n","import React from 'react';\nimport Connect from './Connect/Connect';\nimport Header from './Header';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{width:'100%', height:'100%'}}>\n      <Connect />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(            <App />,    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}